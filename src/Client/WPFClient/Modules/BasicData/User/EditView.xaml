<UserControl x:Class="CP.NLayer.Client.WpfClient.Modules.BasicData.User.EditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:l="http://wpflocalizeextension.codeplex.com"
             l:ResxLocalizationProvider.DefaultAssembly="CP.NLayer.Resources" l:ResxLocalizationProvider.DefaultDictionary="UiResources"
             xmlns:model="clr-namespace:CP.NLayer.Client.WpfClient.Modules.BasicData.User"
             d:DataContext="{d:DesignInstance Type=model:EditViewModel, IsDesignTimeCreatable=True}"
             xmlns:c="clr-namespace:CP.NLayer.Client.WpfClient.Common;assembly=CP.NLayer.Client.WpfClient.Common"
             x:Name="self"
             mc:Ignorable="d">
    <c:MyBusyIndicator BusyContent="{Binding BusyModel.BusyContent}" IsBusy="{Binding BusyModel.IsBusy}"
                              IsIndeterminate="{Binding BusyModel.IsIndeterminate}" DisplayAfter="{Binding BusyModel.DisplayAfter}">
        <StackPanel>
            <c:ValidationMessageControl />

            <Grid MinWidth="500" MinHeight="250">
                <Grid.Resources>
                    <Style TargetType="TextBox" BasedOn="{StaticResource EditViewTextBoxStyle}" />
                    <Style TargetType="TextBlock" BasedOn="{StaticResource EditViewTextBlockStyle}" />
                    <Style TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource EditViewRadButtonStyle}" />
                    <Style TargetType="{x:Type telerik:RadComboBox}" BasedOn="{StaticResource EditViewRadComboBoxStyle}" />
                    <Style TargetType="{x:Type telerik:RadNumericUpDown}" BasedOn="{StaticResource EditViewRadNumericUpDownStyle}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="200" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{l:Loc Id}" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Item.Target.Id}" IsReadOnly="True" IsHitTestVisible="False" x:Name="idTextBox" />
                <TextBlock Grid.Row="1" Grid.Column="0" Text="{l:Loc UserName}" />
                <TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Item.Target.UserName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="2" Grid.Column="0" Text="{l:Loc FullName}" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Item.Target.FullName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="3" Grid.Column="0" Text="{l:Loc Password}" />
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Item.Password, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="4" Grid.Column="0" Text="{l:Loc Department}" />
                <Grid Grid.Row="4" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <telerik:RadComboBox Margin="{Binding Margin, ElementName=idTextBox}"
                            ClearSelectionButtonVisibility="Visible" IsEditable="True" IsFilteringEnabled="True" StaysOpenOnEdit="True" OpenDropDownOnFocus="True"
                            Style="{StaticResource EditViewRadComboBoxStyle}"
                	        ItemsSource="{Binding DepartmentList}" telerik:TextSearch.TextPath="Target.Name"
                            SelectedItem="{Binding SelectedDepartment, Mode=TwoWay}">
                        <telerik:RadComboBox.ClearSelectionButtonContent>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{l:Loc Name}" TextWrapping="Wrap" VerticalAlignment="Center" Width="80" />
                                <TextBlock Text="{l:Loc Description}" TextWrapping="Wrap" VerticalAlignment="Center" Width="100" />
                            </StackPanel>
                        </telerik:RadComboBox.ClearSelectionButtonContent>
                        <telerik:RadComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Target.Name}" TextWrapping="Wrap" VerticalAlignment="Center" Width="80" />
                                    <TextBlock Text="{Binding Target.Description}" TextWrapping="Wrap" VerticalAlignment="Center" Width="100" />
                                </StackPanel>
                            </DataTemplate>
                        </telerik:RadComboBox.ItemTemplate>
                    </telerik:RadComboBox>
                    <telerik:RadButton Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{StaticResource InputFieldMargin}"
                                   Width="30"  Content=" ... "  Command="{Binding ShowDepartmentsCommand}" />
                </Grid>
                <TextBlock Grid.Row="5" Grid.Column="0" Text="{l:Loc Active}" />
                <CheckBox Grid.Row="5" Grid.Column="1" IsChecked="{Binding Item.Target.IsActive, Mode=TwoWay, ValidatesOnDataErrors=True}" Style="{StaticResource EditViewCheckBoxStyle}" />

                <!--column 3-->
                <CheckBox x:Name="selectAllCheckBox" Grid.Column="3" Margin="0,10,0,0" Content="{l:Loc RoleList, Dict=UiResources}" FlowDirection="RightToLeft" HorizontalAlignment="Left" />
                <telerik:RadListBox x:Name="radListBox" Grid.Column="3" Grid.Row="1" Grid.RowSpan="6"
                                ItemsSource="{Binding Item.RoleList}" SelectionMode="Multiple">
                    <telerik:RadListBox.ItemContainerStyle>
                        <Style TargetType="telerik:RadListBoxItem">
                            <Setter Property="IsSelected" Value="{Binding Checked, Mode=TwoWay}" />
                        </Style>
                    </telerik:RadListBox.ItemContainerStyle>
                    <telerik:RadListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Text}" IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadListBoxItem}}}" />
                        </DataTemplate>
                    </telerik:RadListBox.ItemTemplate>
                </telerik:RadListBox>
            </Grid>

            <c:SaveCancelControl />
        </StackPanel>
    </c:MyBusyIndicator>
</UserControl>